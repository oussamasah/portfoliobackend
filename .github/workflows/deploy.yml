name: Deploy Spring Boot to VPS with PostgreSQL

on:
  push:
    branches:
      - deployment  # Or the branch you want to deploy from

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'  # Use 'temurin' for Adoptium

      - name: Build Spring Boot JAR without tests
        run: |
          mvn clean package -DskipTests 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Spring Boot Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:${{ secrets.DOCKER_IMAGE_TAG }} .

      - name: Push Spring Boot Docker image to Docker Hub
        run: |
          docker push ${{secrets.DOCKER_IMAGE_NAME}}:${{secrets.DOCKER_IMAGE_TAG}}

      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{secrets.VPS_IP}}
          username: ${{secrets.VPS_USER}}
          key: ${{secrets.DEPLOYUSER_VPS_SECRET}}
          port: 49159
          run: |
            echo "VPS IP: ${{ secrets.VPS_IP }}"
            echo "VPS User: ${{ secrets.VPS_USER }}"
            echo "VPS key: ${{ secrets.DEPLOYUSER_VPS_SECRET }}"
          script: |
            cd /home/deployuser/api-portfolio
            
            # Pull the latest Spring Boot image
            docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:${{ secrets.DOCKER_IMAGE_TAG }}
            
            # Pull PostgreSQL if necessary
            docker pull postgres:13
            
            # Clean up old containers and images
            docker-compose down 
            docker system prune -f
            
            # Start the containers again
            docker-compose up -d
            
            # Check if the containers are running
            docker ps
